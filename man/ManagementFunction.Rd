% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ManagementFunction.R
\name{ManagementFunction}
\alias{ManagementFunction}
\title{Apply Forest Management within Simulation}
\usage{
ManagementFunction(
  Data,
  Harvest,
  PixelSize,
  nSpecies = nSpecies,
  Save = WriteOut,
  TmpFldR = LocalFldr,
  Round
)
}
\arguments{
\item{Data}{A \code{data.table} object representing a forest inventory derived from a Forest Resource map.
See \code{PixelTable} dataset in the package for table format example.}

\item{Harvest}{A numeric value representing the percentage of the total volume increase to harvest.}

\item{PixelSize}{The size of each pixel in the inventory, used for total volume calculations.}

\item{nSpecies}{A numeric vector specifying the species codes, matching species codes in \code{Data}.}

\item{Save}{Inherited from WriteOut param in \code{PixSim} function.}

\item{TmpFldR}{Inherited from LocalFldr param in in \code{PixSim} function.}

\item{Round}{The current timestep. Internally set by the \code{PixSim} function.}
}
\value{
The function modifies \code{Data} by reference, updating the attributes to reflect the harvested
volumes. It returns invisibly.
}
\description{
This internal function simulates the harvesting process during a timestep of a forest growth simulation.
It determines which stands can be harvested based on the regeneration period and harvests a specified
percentage of the total volume increase. The function prioritizes stands from most to least productive,
stopping once the harvest objective is reached.
}
\details{
The \code{ManagementFunction} function is intended to be called within the \code{PixSim} function. It reads
the growth increment from the simulation data and applies a harvesting rule based on the \code{Harvest}
parameter. The function adjusts the forest inventory in \code{Data} to reflect the harvesting by setting
the harvested stands' attributes to zero. It also optionally writes the harvesting results to disk.
}
\examples{
\dontrun{
 ## PixelTableCopy <- copy(PixelTable)
 ## HarvestPercent <- 10 # Example harvest percentage
 ## PixelSizeExample <- 16
 ## ManagementFunction(Data = PixelTableCopy, Harvest = HarvestPercent, PixelSize = PixelSizeExample,
 ##                    nSpecies = c(1, 2, 3), Save = WriteOut, TmpFldR = LocalFldr, Round = XX)
 ## Now PixelTableCopy has updated attributes reflecting the harvesting
}
}
